import Head from "next/head";
import { Row, Col } from "antd";
import { useEffect, useState } from "react";
import axios from "axios";
import Navbar from "/components/Navbar.js";
import Footer from "/components/Footer.jsx";
import { EditOutlined, DeleteOutlined } from "@ant-design/icons";
import {  Modal, Input } from "antd";

export default function Home() {
  const [users, setUsers] = useState([]);
  const [firstname, setFirstname] = useState("");
  const [lastname, setLastname] = useState("");
  const [id, setId] = useState("");
  const [firstnameedit, setFirstnameedit] = useState("");
  const [lastnameedit, setLastnameedit] = useState("");
  const [modal, setModal] = useState(false);

  useEffect(() => {
    axios.get("http://localhost:3001/users").then((res) => {
      console.log(res);
      setUsers(res.data);
    });
    // fetch("https://www.mecallapi.com/api/users")
    //   .then((res) => res.json())
    //   .then((result) => {
    //     setUsers(res.data);
    //   });
  }, []);
  const deletebyid = (id) => {
    // console.log(id);
    axios.delete("http://localhost:3001/users/" + id).then((res) => {
          setUsers(res.data);   
    });
  };
  const create = () => {
    const Obj = { fname: firstname, lname: lastname };
    axios.post("http://localhost:3001/users", Obj).then((res) => {
      setUsers(res.data);
    });
  };
  const getvalue = (id) => {
    axios.get("http://localhost:3001/users/" + id).then((res) => {
      setFirstnameedit(res.data.fname);
      setLastnameedit(res.data.lname);
      setId(res.data.id);
    });
  };
  const update = () => {
    const Obj = { fname: firstnameedit, lname: lastnameedit };
    axios.put("http://localhost:3001/users/" + id, Obj).then((res) => {
      setUsers(res.data);
    });
  };
  return (
    <div>
      <Navbar />
      <div className="pb-36 pt-4 px-12">
        <Head>
          <title>User</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <h1 className="text-xl md:text-5xl text-center font-bold py-10">
          User
        </h1>
        <div className="pb-2 pr-2 space-x-4" align="right">
          <label class="font-bold">First Name</label>
          <input
            value={firstname}
            placeholder="Your name.."
            onChange={(e) => setFirstname(e.target.value)}
            className="p-1 border rounded-md border-slate-400"
          ></input>
          <label className="font-bold">Last Name</label>
          <input
            value={lastname}
            placeholder="Your Lastname.."
            onChange={(e) => setLastname(e.target.value)}
            className="p-1 border rounded-md border-slate-400"
          ></input>
          <button
            onClick={() => create(users.id)}
            className="p-2 px-6 bg-blue-500 rounded-lg text-white hover:opacity-70"
          >
            เพิ่ม
          </button>
        </div>
        <Row className="rounded bg-gray-300 h-96 overflow-y-scroll border-solid border-4 border-sky-500">
          <Col span={24} className="p-2">
            <table className="table w-full border-separate bg-white border-solid border-2 border-sky-500">
              <thead>
                <tr className="border border-black bg-blue-300">
                  <th className="w-4 p-4 text-center">ID</th>
                  <th className="w-24 p-4">First Name</th>
                  <th className="w-32 p-4 text-center">Last Name</th>
                  <th className="w-32 p-4 text-center"></th>
                </tr>
              </thead>
              {users &&
                users.map((users) => (
                  <tbody>
                    <tr className="border-b border-solid border-2 border-sky-500">
                      <td className="border border-slate-600 w-4 p-2 text-center">
                        {users.id}
                      </td>
                      <td className="border border-slate-600 w-16 p-2 text-center">
                        {users.fname}
                      </td>
                      <td className="border border-slate-600 w-16 p-2 text-center">
                        {users.lname}
                      </td>
                      <td className="border border-slate-600 p-2  w-16 space-x-3  items-center ">
                        <div className="space-x-1" align="center">
                          <EditOutlined
                            className="px-4 "
                            style={{ fontSize: "19px" }}
                            onClick={() => {
                              getvalue(users.id);
                            }}
                          />
                          <DeleteOutlined
                            onClick={() => {
                              deletebyid(users.id);
                            }}
                            style={{
                              color: "red",
                              marginLeft: 12,
                              fontSize: "19px",
                            }}
                          />
                          {/* <button
                            onClick={() => getvalue(users.id)}
                            className="p-1 px-4 bg-blue-500 rounded-lg text-white hover:opacity-70"
                          >
                            แก้ไข
                          </button>
                          <button
                            onClick={() => deletebyid(users.id)}
                            className="p-1 px-6 bg-red-600  rounded-lg text-white hover:opacity-70 "
                          >
                            ลบ
                          </button> */}
                        </div>
                      </td>
                    </tr>
                  </tbody>
                ))}
            </table>
          </Col>
        </Row>
        <label>ID</label>
        <input
          value={id}
          onChange={(e) => setId(e.target.value)}
          className="p-1 border"
        ></input>
        <label>First Name</label>
        <input
          value={firstnameedit}
          onChange={(e) => setFirstnameedit(e.target.value)}
          className="p-1 border"
        ></input>
        <label>Last Name</label>
        <input
          value={lastnameedit}
          onChange={(e) => setLastnameedit(e.target.value)}
          className="p-1 border"
        ></input>
        <button
          onClick={() => update()}
          className="p-1 px-4 bg-blue-500 rounded-lg text-white hover:opacity-70"
        >
          บันทึก
        </button>
      </div>
      <Footer />
    </div>
  );
}
